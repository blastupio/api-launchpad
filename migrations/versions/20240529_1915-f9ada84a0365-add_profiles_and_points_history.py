"""add profiles and points history

Revision ID: f9ada84a0365
Revises: bfd073a9ee5f
Create Date: 2024-05-29 19:15:10.724867

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f9ada84a0365'
down_revision: Union[str, None] = 'bfd073a9ee5f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('profiles',
    sa.Column('id', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('points', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), server_default=sa.text('0::bigint'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_profiles_address'), 'profiles', ['address'], unique=True)
    op.create_table('points_history',
    sa.Column('id', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.Column('operation_type', sa.Enum('ADD', 'ADD_REF', 'ADD_REF_BONUS', 'ADD_SYNC', 'ADD_REF_SYNC', 'ADD_EXTRA', 'ADD_MANUAL', 'ADD_IDO_POINTS', name='operationtype'), nullable=False),
    sa.Column('points_before', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), server_default=sa.text('0::bigint'), nullable=False),
    sa.Column('amount', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), server_default=sa.text('0::bigint'), nullable=False),
    sa.Column('points_after', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), server_default=sa.text('0::bigint'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('profile_id', sa.BigInteger().with_variant(sa.BIGINT(), 'postgresql').with_variant(sa.INTEGER(), 'sqlite'), nullable=False),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('points_history')
    op.drop_index(op.f('ix_profiles_address'), table_name='profiles')
    op.drop_table('profiles')
    # ### end Alembic commands ###
